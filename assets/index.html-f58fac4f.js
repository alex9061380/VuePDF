import{_ as o,r as p,o as c,c as i,b as s,d as n,e,a}from"./app-d20ff765.js";const l={},u=a(`<h1 id="vuepdf" tabindex="-1"><a class="header-anchor" href="#vuepdf" aria-hidden="true">#</a> VuePDF</h1><p><img src="https://img.shields.io/npm/v/@tato30/vue-pdf?style=flat-square" alt="Latest version"><img src="https://img.shields.io/npm/dw/@tato30/vue-pdf?style=flat-square" alt="Downloads"><img src="https://img.shields.io/npm/l/@tato30/vue-pdf?style=flat-square" alt="License"></p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>VuePDF is a <strong>Vue 3</strong> component for pdf.js that allows you to flexibly display PDF pages within your project.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>npm i @tato30/vue-pdf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>yarn add @tato30/vue-pdf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> VuePDF<span class="token punctuation">,</span> usePDF <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tato30/vue-pdf&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf<span class="token punctuation">,</span> pages<span class="token punctuation">,</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;document.pdf&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Document has </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pages<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> pages</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Document info: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VuePDF</span> <span class="token attr-name">:pdf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usepdf" tabindex="-1"><a class="header-anchor" href="#usepdf" aria-hidden="true">#</a> usePDF</h2><p>This function loads and prepare the PDF Document for it usage also let you get some basic information and properties about the document.</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> <strong>Parameters</strong></h3><h4 id="src" tabindex="-1"><a class="header-anchor" href="#src" aria-hidden="true">#</a> <strong>src</strong></h4><p>Type: <code>string | URL | TypedArray | DocumentInitParameters</code> <br> Required: <code>True</code></p>`,14),r=s("code",null,"src",-1),d={href:"https://github.com/mozilla/pdf.js/blob/38287d943532eee939ceffbe6861163f93805ca7/src/display/api.js#L145",target:"_blank",rel:"noopener noreferrer"},k=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> pdf<span class="token punctuation">,</span> pages<span class="token punctuation">,</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;document.pdf&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> <strong>options</strong></h4><p>Type: <code>object</code></p><p>An object with the following properties:</p><ul><li><code>onPassword</code>: Callback function to request the document password if no password (or wrong password) was provided.</li><li><code>onProgress</code>: Callback function to enable progress monitor.</li><li><code>onError</code>: function to handle pdf loading errors</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onPassword</span><span class="token punctuation">(</span><span class="token parameter">updatePassword<span class="token punctuation">,</span> reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Reason for callback: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token function">updatePassword</span><span class="token punctuation">(</span><span class="token string">&#39;documentpassword1234&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onProgress</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> loaded<span class="token punctuation">,</span> total <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>loaded <span class="token operator">/</span> total <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% Loaded</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">PDF loading error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf<span class="token punctuation">,</span> pages<span class="token punctuation">,</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;document.pdf&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  onPassword<span class="token punctuation">,</span>
  onProgress<span class="token punctuation">,</span>
  onError
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> <strong>Returns</strong></h3><h4 id="pdf" tabindex="-1"><a class="header-anchor" href="#pdf" aria-hidden="true">#</a> <strong>pdf</strong></h4><p>Type: <code>PDFDocumentLoadingTask</code></p>`,9),m={href:"https://mozilla.github.io/pdf.js/api/draft/module-pdfjsLib-PDFDocumentLoadingTask.html",target:"_blank",rel:"noopener noreferrer"},g=a(`<h4 id="pages" tabindex="-1"><a class="header-anchor" href="#pages" aria-hidden="true">#</a> <strong>pages</strong></h4><p>Type: <code>int</code></p><p>Number of document pages.</p><h4 id="info" tabindex="-1"><a class="header-anchor" href="#info" aria-hidden="true">#</a> <strong>info</strong></h4><p>Type: <code>object</code></p><p>Document information object.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;metadata&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// Metadata object</span>
  <span class="token property">&quot;attachments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// File attachments object</span>
  <span class="token property">&quot;javascript&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>...<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Array of embedded scripts</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(h,f){const t=p("ExternalLinkIcon");return c(),i("div",null,[u,s("p",null,[n("This parameter is the same "),r,n(" of "),s("a",d,[n("pdf.js"),e(t)])]),k,s("p",null,[n("The loading task of document, see "),s("a",m,[n("PDFDocumentLoadingTask"),e(t)]),n(" for more details.")]),g])}const y=o(l,[["render",v],["__file","index.html.vue"]]);export{y as default};
